#include <unistd.h>
#include <iostream>
#include <exception>
#include "mraa.hpp"
#include <string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <netdb.h>
using namespace std;

//#####################################################################
int main()
{


	int sockfd; // socket file descriptor
	struct sockaddr_in serv_addr;
	struct hostent *server;
	char name[6]="Area1";
	char type[6]="Entry";
	int buffsize=9;
	char buffer[buffsize];
	mraa::Uart* dev;
	dev = new mraa::Uart(0);
	cout<<"UART SUCCESS"<<"\n";
	char array[12];

//##########################################################################
	sockfd = socket(AF_INET, SOCK_STREAM, 0); // generate file descriptor
	if (sockfd < 0)
	    perror("ERROR opening socket");

	server = gethostbyname("192.168.99.1"); //the ip address (or server name) of the listening server.
	if (server == NULL) {
	    fprintf(stderr,"ERROR, no such host\n");
	    exit(0);
	}

	bzero((char *) &serv_addr, sizeof(serv_addr));
	serv_addr.sin_family = AF_INET;
	bcopy((char *)server->h_addr, (char *)&serv_addr.sin_addr.s_addr, server->h_length);
	serv_addr.sin_port = htons(3333);

	if (connect(sockfd,(struct sockaddr *)&serv_addr,sizeof(serv_addr)) < 0)
	    perror("ERROR connecting");

	//  Connection Done !
// #################################################################################################################

   for(;;)
   {
    dev->read(array,12);
    for(int i=0;i<12;i++)
    cout<<array[i];
    cout<<"\n";
    send(sockfd,array,12,0);
    recv(sockfd,buffer,buffsize,0);
    send(sockfd,name,6,0);
    recv(sockfd,buffer,buffsize,0);
    send(sockfd,type,6,0);
    recv(sockfd,buffer,buffsize,0);

   }
   //#########################################################################################################
   //never executes
   delete dev;
   return mraa::SUCCESS;
}
